// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TetsProject.Migrations
{
    [DbContext(typeof(DenemeContext))]
    [Migration("20230508070735_mig_4")]
    partial class mig_4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("ec_sec")
                .StartsAt(990L);

            modelBuilder.HasSequence("xSequence");

            modelBuilder.Entity("Anne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Rastgelesayi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR ec_sec");

                    b.Property<string>("İsim")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("İsim");

                    b.ToTable("Anneler");
                });

            modelBuilder.Entity("x", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [xSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Xaçıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("x");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Çocuk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnneId")
                        .HasColumnType("int");

                    b.Property<string>("İsim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnneId");

                    b.ToTable("Çocuklar");
                });

            modelBuilder.Entity("q", b =>
                {
                    b.HasBaseType("x");

                    b.Property<string>("Qaçıkalam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("q");
                });

            modelBuilder.Entity("y", b =>
                {
                    b.HasBaseType("x");

                    b.Property<string>("Yaçıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("y");
                });

            modelBuilder.Entity("z", b =>
                {
                    b.HasBaseType("y");

                    b.Property<string>("Zaçıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("z");
                });

            modelBuilder.Entity("Çocuk", b =>
                {
                    b.HasOne("Anne", "Anne")
                        .WithMany("Çocuklar")
                        .HasForeignKey("AnneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anne");
                });

            modelBuilder.Entity("Anne", b =>
                {
                    b.Navigation("Çocuklar");
                });
#pragma warning restore 612, 618
        }
    }
}
